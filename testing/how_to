how to use this app:
    1. make note of the folder path to where your results are kept

    2. open a python terminal
        a. create a variable with the string as the folder path to your local results
            1. ex: datapath = '/users/sean/krakenproject/tradingproject/results'
        b. run this: run import_v2.py
        c. run this: run convert_to_dataframe_v2_2.py
        d. run this: rawdata = import_results(datapath)
        e. run this: df = convert_to_dataframe(rawdata)
        d. run this: run imports.py
        f. run this: run prepare_data.py

for the sake of current simplicity and concept building, and so I can follow along with this tutorial,
let's get rid of all the data except for:
    GOOD (successful) reads of bid1 and the time stamp.

                drop all other columns (no longer needed)
                df = df[['Datetime', 'bid1']]

I believe the tutorial is just using one column to run the data on, so that's what we will do..
We are assuming there are not many errors in the time stamps. Each entry is roughly 3 seconds apart from each other.
We just have to make sure they are in order (which they should already be)
df = df['bid1']

check it on on a graph to make sure it looks ok and there are no outlyers
plt.plot(df)

use df.describe() to make sure there are no weird min and max values

look_back = 1

run this: trainX, trainY, testX, testY = prepare_data(df, look_back)

                convert it to float if it's not already:
                dataset = dataset.astype('float32')

# create and fit the LSTM network
model = Sequential()
model.add(LSTM(4, input_shape=(1, look_back)))
model.add(Dense(1))
model.compile(loss='mean_squared_error', optimizer='adam')
model.fit(trainX, trainY, epochs=100, batch_size=1, verbose=2)